"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require("./");
describe('Mock', () => {
    test('should allow changing the state', () => {
        const state = {
            foo: 'bar',
        };
        const config = {
            state,
        };
        const overmind = _1.createOvermindSSR(config);
        overmind.state.foo = 'bar2';
        expect(overmind.state).toEqual({
            foo: 'bar2',
        });
    });
    test('should return a tree of changes', () => {
        const state = {
            foo: 'bar',
        };
        const config = {
            state,
        };
        const overmind = _1.createOvermindSSR(config);
        overmind.state.foo = 'bar2';
        const mutations = overmind.hydrate();
        expect(mutations[0].method).toBe('set');
        expect(mutations[0].path).toBe('foo');
        expect(mutations[0].args).toEqual(['bar2']);
    });
    test('should rehydrate mutation', () => {
        let mutations = [];
        const state = {
            foo: 'bar',
        };
        const onInitialize = ({ state }, overmind) => {
            _1.rehydrate(state, mutations);
        };
        const config = {
            onInitialize,
            state,
        };
        const overmindSsr = _1.createOvermindSSR(config);
        overmindSsr.state.foo = 'bar2';
        mutations = overmindSsr.hydrate();
        const overmind = new _1.Overmind(config);
        expect(_1.json(overmind.state)).toEqual({
            foo: 'bar2'
        });
    });
});
//# sourceMappingURL=ssr.test.js.map