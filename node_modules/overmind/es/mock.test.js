import { createOvermindMock } from './';
describe('Mock', () => {
    test('should run action tests', () => {
        const state = {
            foo: 'bar',
        };
        const test = ({ state, effects }) => {
            state.foo = effects.effect('bar2');
        };
        const actions = { test };
        const effect = (arg) => arg;
        const effects = { effect };
        const config = {
            state,
            actions,
            effects,
        };
        const overmind = createOvermindMock(config, {
            effect(arg) {
                return arg + '!!!';
            },
        });
        overmind.actions.test();
        expect(overmind.mutations).toEqual([
            {
                method: 'set',
                path: 'foo',
                args: ['bar2!!!'],
                hasChangedValue: true,
                delimiter: '.',
            },
        ]);
    });
    test('should test onInitialize explicitly', () => {
        const state = {
            foo: 'bar',
        };
        const onInitialize = ({ state }) => {
            state.foo += '!';
        };
        const config = {
            onInitialize,
            state,
        };
        const overmind = createOvermindMock(config, {
            effect() {
                return 'bar3';
            },
        });
        overmind.onInitialize();
        expect(overmind.mutations).toEqual([
            {
                method: 'set',
                path: 'foo',
                args: ['bar!'],
                hasChangedValue: true,
                delimiter: '.',
            },
        ]);
    });
});
//# sourceMappingURL=mock.test.js.map